services:
  nginx:
    build: .
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - /etc/letsencrypt:/etc/letsencrypt:ro
      - ./certbot/www:/var/www/certbot:rw
    depends_on:
      - frontend
      - backend
    networks:
      - mynetwork
    entrypoint: /bin/bash -c "while ! test -f /etc/letsencrypt/live/finition108.io/fullchain.pem; do echo 'Waiting for Certbot to generate SSL certificates...'; sleep 5; done; nginx -g 'daemon off;'"


  backend:
    build:
      context: ./backend
    ports:
      - "3001:3001"
    networks:
      - mynetwork
    environment:
      - PORT=3001
      - NODE_ENV=production
      - DO_SPACES_KEY=DO003NB89L7TREA74BHW
      - DO_SPACES_SECRET=cTm4w/ahaYGQmqv65x7fVsKBY/DWnIOMT7zvuCRwBvE
      - DO_SPACES_BUCKET=imagery
    restart: always

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    environment:
      - NODE_ENV=production
      - npm_config_platform=linux
      - API_BASE_URL=http://backend:3001
    ports:
      - "3000:3000"
    networks:
      - mynetwork
    restart: always

networks:
  mynetwork:
    driver: bridge


  # certbot:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile.certbot
  #   container_name: certbot
  #   volumes:
  #     - ./certbot/conf:/etc/letsencrypt:rw
  #     - ./certbot/www:/var/www/certbot:rw
  #     - ./nginx.conf:/etc/nginx/nginx.conf:ro
  #   environment:
  #     - CERTBOT_EMAIL=josh.b.lewis@outlook.com
  #     - CERTBOT_DOMAIN=finition108.io
  #   entrypoint: "/bin/sh -c 'certbot certonly finition108.io --config-dir /etc/letsencrypt --work-dir /tmp --logs-dir /tmp'"
  #   depends_on:
  #     - nginx
  #   networks:
  #     - mynetwork
